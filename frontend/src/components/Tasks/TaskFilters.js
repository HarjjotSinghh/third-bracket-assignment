import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Input } from '../ui/input';
import { Badge } from '../ui/badge';
import { Button } from '../ui/button';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue, } from '../ui/select';
import { Search, Filter, X } from 'lucide-react';
var TaskFilters = function (_a) {
    var searchTerm = _a.searchTerm, onSearchChange = _a.onSearchChange, statusFilter = _a.statusFilter, onStatusFilterChange = _a.onStatusFilterChange, priorityFilter = _a.priorityFilter, onPriorityFilterChange = _a.onPriorityFilterChange, activeFiltersCount = _a.activeFiltersCount, onClearFilters = _a.onClearFilters;
    var hasActiveFilters = activeFiltersCount > 0;
    return (_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "relative", children: [_jsx(Search, { className: "absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4" }), _jsx(Input, { placeholder: "Search tasks by title or description...", value: searchTerm, onChange: function (e) { return onSearchChange(e.target.value); }, className: "pl-10 transition-all duration-200 focus:ring-2 focus:ring-orange-500" })] }), _jsxs("div", { className: "flex flex-col sm:flex-row gap-4 items-start sm:items-center", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(Filter, { className: "h-4 w-4 text-gray-500" }), _jsx("span", { className: "text-sm font-medium text-gray-700", children: "Filters:" })] }), _jsxs("div", { className: "flex flex-wrap gap-3 flex-1", children: [_jsxs(Select, { value: statusFilter, onValueChange: onStatusFilterChange, children: [_jsx(SelectTrigger, { className: "w-full sm:w-[140px]", children: _jsx(SelectValue, { placeholder: "Status" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "all", children: "All Status" }), _jsx(SelectItem, { value: "Todo", children: "To Do" }), _jsx(SelectItem, { value: "In Progress", children: "In Progress" }), _jsx(SelectItem, { value: "Completed", children: "Completed" })] })] }), _jsxs(Select, { value: priorityFilter, onValueChange: onPriorityFilterChange, children: [_jsx(SelectTrigger, { className: "w-full sm:w-[140px]", children: _jsx(SelectValue, { placeholder: "Priority" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "all", children: "All Priority" }), _jsx(SelectItem, { value: "High", children: "High" }), _jsx(SelectItem, { value: "Medium", children: "Medium" }), _jsx(SelectItem, { value: "Low", children: "Low" })] })] }), hasActiveFilters && (_jsxs(Button, { variant: "outline", size: "sm", onClick: onClearFilters, className: "text-red-600 border-red-200 hover:bg-red-50 hover:text-red-700", children: [_jsx(X, { className: "mr-1 h-3 w-3" }), "Clear Filters"] }))] }), hasActiveFilters && (_jsxs(Badge, { variant: "secondary", className: "text-xs", children: [activeFiltersCount, " active"] }))] })] }));
};
export default TaskFilters;
